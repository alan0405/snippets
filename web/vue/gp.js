"use strict"; var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t }, gp = { get: function (t) { return fetch(t, { method: "GET" }).then(function (t) { return t.text() }) }, post: function (t, o) { return fetch(t, { method: "POST", headers: { "Content-Type": "application/x-www-form-urlencoded" }, body: this.t(o) }).then(function (t) { return t.text() }) }, t: function (t) { var o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "", e = []; if ("object" == (void 0 === t ? "undefined" : _typeof(t))) for (var n in t) e.push(gp.t(t[n], o + ("" == o ? n : "[" + n + "]"))); else if (Array.isArray(t)) for (var r = 0; r < t.length; r++)e.push(gp.t(t[r], o + "[" + r + "]")); else "function" == typeof t || e.push(encodeURIComponent(o) + "=" + encodeURIComponent(t) + "&"); return e.join("") } };